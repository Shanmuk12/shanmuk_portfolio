"use strict";
"use client";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.NextAppDirEmotionCacheProvider = void 0;
const react_1 = __importDefault(require("react"));
const cache_1 = __importDefault(require("@emotion/cache"));
const navigation_1 = require("next/navigation");
const react_2 = require("react");
const react_3 = require("@emotion/react");
function NextAppDirEmotionCacheProvider(props) {
    const { options, CacheProvider = react_3.CacheProvider, children } = props;
    const [{ cache, flush }] = (0, react_2.useState)(() => {
        const cache = (0, cache_1.default)(options);
        cache.compat = true;
        const prevInsert = cache.insert;
        let inserted = [];
        cache.insert = (...args) => {
            const serialized = args[1];
            if (cache.inserted[serialized.name] === undefined) {
                inserted.push(serialized.name);
            }
            return prevInsert(...args);
        };
        const flush = () => {
            const prevInserted = inserted;
            inserted = [];
            return prevInserted;
        };
        return { cache, flush };
    });
    (0, navigation_1.useServerInsertedHTML)(() => {
        const names = flush();
        if (names.length === 0)
            return null;
        let styles = "";
        for (const name of names) {
            styles += cache.inserted[name];
        }
        return (react_1.default.createElement("style", { key: cache.key, "data-emotion": `${cache.key} ${names.join(" ")}`, dangerouslySetInnerHTML: {
                "__html": styles
            } }));
    });
    return react_1.default.createElement(CacheProvider, { value: cache }, children);
}
exports.NextAppDirEmotionCacheProvider = NextAppDirEmotionCacheProvider;
